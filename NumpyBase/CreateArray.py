import numpy as np

# 创建一维数组
# args 1:start 2:end(not include) 3:step  步长为1，起始为0可以省略，只写结束位置

# arr = np.arange(0, 20, 3)  # [ 0  3  6  9 12 15 18]
# print(arr)

# linspace ---等差数组
# args 1:start 2:end(include) 3:count(50 默认)

# arr = np.linspace(0, 7, 6)  # [0.  1.4 2.8 4.2 5.6 7. ]
# print(arr)

# logspace ---等比数组
# args 1:start 2:end 3:count
# base 默认10  可以指定base base=

# arr = np.logspace(1, 4, 4) # [   10.   100.  1000. 10000.]
# print(arr)


# zeros  ones 创建数组的形状，全部0 或 1  用来占位

# arr = np.zeros((2, 4))
# print(arr)
# [[0. 0. 0. 0.]
#  [0. 0. 0. 0.]]

# diag 创建一个类似对角矩阵的数组

# arr = np.diag([1, 2, 3, 1, 2])
# print(arr)
# [[1 0 0 0 0]
#  [0 2 0 0 0]
#  [0 0 3 0 0]
#  [0 0 0 1 0]
#  [0 0 0 0 2]]

# eye 创建类似单位矩阵的数组

# arr = np.eye(4)
# print(arr)
# [[1. 0. 0. 0.]
#  [0. 1. 0. 0.]
#  [0. 0. 1. 0.]
#  [0. 0. 0. 1.]]

# random 创建随机数组 数据落在各个区间内的可能性是一样大的
# 可以应用于少量数据 ---基于大量数据的结论
# args: 个数 或数组的形状

# arr = np.random.random(30)
# print(arr)
# [0.39802874 0.79791408 0.88631653 0.48030538 0.69166132 0.56014829
#  0.3645418  0.30368692 0.17446154 0.11898956 0.75580907 0.77190211
#  0.82118351 0.80183205 0.21792417 0.85696807 0.69543855 0.14153973
#  0.14604627 0.65286659 0.51758452 0.84285997 0.81520505 0.57170419
#  0.99582571 0.05915599 0.54627365 0.95584331 0.23563437 0.19056558]


# 创建基于正态分布的数组
# args:数量或者行列数
# u=0 a=1 是标准正态分布

# arr = np.random.randn(20)
# print(arr)
# [-0.3068568   1.43461335  0.18312184 -0.08788639 -0.02387234  0.10657123
#  -1.446293   -1.93496806  0.45280394  2.27629498 -0.36150289 -0.02359026
#  -0.58134244  0.36688272  0.50027631  1.41553109  1.49918872  1.08400907
#   0.68012398  0.62604852]


# [low, high] 生成指定范围内的随机整数数组
# args low:start high:end(not include) size:count 或者形状

arr = np.random.randint(2, 20, 30)
print(arr)
# [ 2  5 14 18 14 17 17  3 12 13 13  3  8 16 13  3  7 11  9  5  3 13  3  7
#  11  7  7 12  3 13]